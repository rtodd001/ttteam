{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar FPStaticServer = NativeModules.FPStaticServer;\nvar PORT = '';\nvar ROOT = null;\nvar LOCALHOST = 'http://127.0.0.1:';\n\nvar StaticServer = function () {\n  function StaticServer(port, root, opts) {\n    _classCallCheck(this, StaticServer);\n\n    switch (arguments.length) {\n      case 3:\n        this.port = \"\" + port || PORT;\n        this.root = root || ROOT;\n        this.localOnly = opts && opts.localOnly || false;\n        this.keepAlive = opts && opts.keepAlive || false;\n        break;\n\n      case 2:\n        this.port = \"\" + port;\n\n        if (typeof arguments[1] === 'string') {\n          this.root = root;\n          this.localOnly = false;\n          this.keepAlive = false;\n        } else {\n          this.root = ROOT;\n          this.localOnly = arguments[1] && arguments[1].localOnly || false;\n          this.keepAlive = arguments[1] && arguments[1].keepAlive || false;\n        }\n\n        break;\n\n      case 1:\n        if (typeof arguments[0] === 'number') {\n          this.port = \"\" + port;\n          this.root = ROOT;\n          this.localOnly = false;\n          this.keepAlive = false;\n        } else {\n          this.port = PORT;\n          this.root = ROOT;\n          this.localOnly = arguments[0] && arguments[0].localOnly || false;\n          this.keepAlive = arguments[0] && arguments[0].keepAlive || false;\n        }\n\n        break;\n\n      default:\n        this.port = PORT;\n        this.root = ROOT;\n        this.localOnly = false;\n        this.keepAlive = false;\n    }\n\n    this.started = false;\n    this._origin = undefined;\n    this._handleAppStateChangeFn = this._handleAppStateChange.bind(this);\n  }\n\n  _createClass(StaticServer, [{\n    key: \"start\",\n    value: function start() {\n      var _this = this;\n\n      if (this.running) {\n        return Promise.resolve(this.origin);\n      }\n\n      this.started = true;\n      this.running = true;\n\n      if (!this.keepAlive && Platform.OS === 'android') {\n        AppState.addEventListener('change', this._handleAppStateChangeFn);\n      }\n\n      return FPStaticServer.start(this.port, this.root, this.localOnly, this.keepAlive).then(function (origin) {\n        _this._origin = origin;\n        return origin;\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.running = false;\n      return FPStaticServer.stop();\n    }\n  }, {\n    key: \"kill\",\n    value: function kill() {\n      this.stop();\n      this.started = false;\n      this._origin = undefined;\n      AppState.removeEventListener('change', this._handleAppStateChangeFn);\n    }\n  }, {\n    key: \"_handleAppStateChange\",\n    value: function _handleAppStateChange(appState) {\n      if (!this.started) {\n        return;\n      }\n\n      if (appState === \"active\" && !this.running) {\n        this.start();\n      }\n\n      if (appState === \"background\" && this.running) {\n        this.stop();\n      }\n\n      if (appState === \"inactive\" && this.running) {\n        this.stop();\n      }\n    }\n  }, {\n    key: \"isRunning\",\n    value: function isRunning() {\n      var _this2 = this;\n\n      return FPStaticServer.isRunning().then(function (running) {\n        _this2.running = running;\n        return _this2.running;\n      });\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return this._origin;\n    }\n  }]);\n\n  return StaticServer;\n}();\n\nexport default StaticServer;","map":{"version":3,"sources":["/mnt/c/Users/Ronan/Documents/School/UCR/CS180/ttteam/node_modules/react-native-static-server/index.js"],"names":["FPStaticServer","NativeModules","PORT","ROOT","LOCALHOST","StaticServer","port","root","opts","arguments","length","localOnly","keepAlive","started","_origin","undefined","_handleAppStateChangeFn","_handleAppStateChange","bind","running","Promise","resolve","origin","Platform","OS","AppState","addEventListener","start","then","stop","removeEventListener","appState","isRunning"],"mappings":"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","sourcesContent":["import {\n\tNativeModules,\n\tAppState,\n\tPlatform\n } from 'react-native';\n\nconst { FPStaticServer } = NativeModules;\n\nconst PORT = '';\nconst ROOT = null;\nconst LOCALHOST = 'http://127.0.0.1:';\n\nclass StaticServer {\n\tconstructor(port, root, opts) {\n\t\tswitch (arguments.length) {\n\t\t\tcase 3:\n\t\t\t\tthis.port = `${port}` || PORT;\n\t\t\t\tthis.root = root || ROOT;\n\t\t\t\tthis.localOnly = (opts && opts.localOnly) || false;\n\t\t\t\tthis.keepAlive = (opts && opts.keepAlive) || false;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.port = `${port}`;\n\t\t\t\tif (typeof(arguments[1]) === 'string') {\n\t\t\t\t\tthis.root = root;\n\t\t\t\t\tthis.localOnly = false;\n\t\t\t\t\tthis.keepAlive = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.root = ROOT;\n\t\t\t\t\tthis.localOnly = (arguments[1] && arguments[1].localOnly) || false;\n\t\t\t\t\tthis.keepAlive = (arguments[1] && arguments[1].keepAlive) || false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tif (typeof(arguments[0]) === 'number') {\n\t\t\t\t\tthis.port = `${port}`;\n\t\t\t\t\tthis.root = ROOT;\n\t\t\t\t\tthis.localOnly = false;\n\t\t\t\t\tthis.keepAlive = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.port = PORT;\n\t\t\t\t\tthis.root = ROOT;\n\t\t\t\t\tthis.localOnly = (arguments[0] && arguments[0].localOnly) || false;\n\t\t\t\t\tthis.keepAlive = (arguments[0] && arguments[0].keepAlive) || false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.port = PORT;\n\t\t\t\tthis.root = ROOT;\n\t\t\t\tthis.localOnly = false;\n\t\t\t\tthis.keepAlive = false;\n\t\t}\n\n\n\t\tthis.started = false;\n\t\tthis._origin = undefined;\n\t\tthis._handleAppStateChangeFn = this._handleAppStateChange.bind(this);\n\t}\n\n\tstart() {\n\t\tif( this.running ){\n\t\t\treturn Promise.resolve(this.origin);\n\t\t}\n\n\t\tthis.started = true;\n\t\tthis.running = true;\n\n\t\tif (!this.keepAlive && (Platform.OS === 'android')) {\n\t\t\tAppState.addEventListener('change', this._handleAppStateChangeFn);\n\t\t}\n\n\t\treturn FPStaticServer.start(this.port, this.root, this.localOnly, this.keepAlive)\n\t\t\t.then((origin) => {\n\t\t\t\tthis._origin = origin;\n\t\t\t\treturn origin;\n\t\t\t});\n\t}\n\n\tstop() {\n\t\tthis.running = false;\n\n\t\treturn FPStaticServer.stop();\n\t}\n\n\tkill() {\n\t\tthis.stop();\n\t\tthis.started = false;\n\t\tthis._origin = undefined;\n\t\tAppState.removeEventListener('change', this._handleAppStateChangeFn);\n\t}\n\n\t_handleAppStateChange(appState) {\n\t\tif (!this.started) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (appState === \"active\" && !this.running) {\n\t\t\tthis.start();\n\t\t}\n\n\t\tif (appState === \"background\" && this.running) {\n\t\t\tthis.stop();\n\t\t}\n\n\t\tif (appState === \"inactive\" && this.running) {\n\t\t\tthis.stop();\n\t\t}\n\t}\n\n\tget origin() {\n\t\treturn this._origin;\n\t}\n\n\tisRunning() {\n\t\treturn FPStaticServer.isRunning()\n\t\t\t.then(running => {\n\t\t\t\tthis.running = running;\n\n\t\t\t\treturn this.running;\n\t\t\t})\n\t}\n\n}\n\nexport default StaticServer;\n"]},"metadata":{},"sourceType":"module"}